@mixin rss-button-variant(
	$bg,
	$color,
	$hover-bg: rgba($on-primary, 0.08),
	$pressed-bg: rgba($on-primary, 0.16),
	$focus-box-shadow-color: $on-primary-container,
) {
	color: $color;

	background: $bg;

	&::after {
		background: $hover-bg;
	}

	&:focus {
		&::after {
			background: $pressed-bg;
		}
	}

	&:focus-visible {
		box-shadow: 0 0 0 2px $focus-box-shadow-color inset;
	}
}

@mixin rss-form-validation-state-selector($state) {
	#{if(&, "&", "")}.is-#{$state} {
		@content;
	}
}

@mixin rss-form-validation-state(
	$state,
	$color,
	$icon: null,
	$box-shadow: 0 0 0 1px $color inset,
	$focus-box-shadow: 0 0 0 2px $color inset,
) {
	.#{$state}-feedback {
		display: none;
		width: 100%;
		margin-top: $form-feedback-margin-top;
		padding-left: $form-feedback-padding-start;

		color: $color;
		font-size: $form-feedback-font-size;
		font-style: $form-feedback-font-style;

		@if $icon {
			$icon-margin-end: map-get($spacers, 2);

			padding-left: $form-feedback-padding-start + $form-feedback-icon-size + $icon-margin-end;

			background-image: escape-svg($icon);
			background-repeat: no-repeat;
			background-position: left $form-feedback-padding-start center;
			background-size: $form-feedback-icon-size;
		}
	}

	.form-control {
		@include rss-form-validation-state-selector($state) {
			box-shadow: $box-shadow;

			&:focus {
				box-shadow: $focus-box-shadow;
			}
		}
	}

	@include rss-form-validation-state-selector($state) {
		~ .#{$state}-feedback {
			display: block;
		}
	}
}
